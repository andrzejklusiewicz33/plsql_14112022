select * from employees;
--przerwa do 10:43
--blok anonimowy
--procedura
--funkcja
--trigger / wyzwalacz
--pakiet 
/
begin
null;
end;
/
begin
dbms_output.put_line('hello world!');
end;
/
set serveroutput on;
/

declare
owoc varchar2(4000);
x integer;
y number;
z date;
begin
dbms_output.put_line('hello world!');
end;
/


declare
owoc varchar2(4000):='banan';
x integer:=200;
y number;
z date;
begin
x:=100;
dbms_output.put_line('hello world! owoc='||owoc||' x='||x);
end;
/

/*1.
Stwórz blok anonimowy który przyjmie poprzez zmienne twoje imie oraz nazwisko, 
a nastepnie wyswietli komunikat typu witaj twoje_imie twoje_nazwisko!
*/

--first_name
--firstName


declare
first_name varchar2(4000):='Andrzej';
last_name varchar2(4000):='Klusiewicz';
begin
dbms_output.put_line('Witaj '||first_name||' '||last_name||'!');
end;
/


declare
first_name varchar2(4000);
last_name varchar2(4000);
begin
firsT_name:='Andrzej';
last_name:='Klusiewicz';
dbms_output.put_line('Witaj '||first_name||' '||last_name||'!');
end;
/

declare
x integer:=10;
y integer:=3;
begin
dbms_output.put_line(x/y);
end;
/


declare
x integer:=10;
y integer:=3;
wynik number:=x/y;
begin
dbms_output.put_line(wynik);
end;
/


declare
x integer:=10;
y integer:=3;
wynik number;
begin
wynik:=round(x/y,2);
dbms_output.put_line(wynik);
end;
/


declare
x integer:=10;
y integer:=6;
wynik number;
begin
wynik:=round(x/y,2);
dbms_output.put_line(wynik);
end;
/


declare
x integer:=10;
y integer:=6;
wynik number;
begin
wynik:=trunc(x/y,2);
dbms_output.put_line(wynik);
end;
/

/*2.
napisz program który przyjmie przez zmienne wzrost w metrach i masê w kilogramach a nastepnie 
wyliczy i wypisze zaokraglone do 2 miejsc po przecinku bmi wg. wzoru masa/(wzrost*wzrost)
*/

select 72/power(1.76,2) from dual;
/

declare
wzrost number:=1.76;
masa number:=72;
bmi number:=round(masa/power(wzrost,2),2);
begin
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
end;

/

declare
wzrost number:=1.76;
masa number:=72;
bmi number;
begin
bmi:=round(masa/power(wzrost,2),2);
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
end;

/



declare
wzrost number:=0;
masa number:=72;
bmi number;
begin
bmi:=round(masa/power(wzrost,2),2);
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
exception 
when zero_divide then dbms_output.put_line('wzrost jest równy zero!');
end;
/

declare
wzrost number:=0;
masa number:=72;
bmi number:=round(masa/power(wzrost,2),2);
begin
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
exception 
when zero_divide then dbms_output.put_line('wzrost jest równy zero!');
end;
/

create or replace procedure hello is 
begin
dbms_output.put_line(1/0);
end;
/

execute hello;
/



declare
wzrost number:=1.76;
masa number:=72;
bmi integer:=round(masa/power(wzrost,2),2); -----fuuuuuu - zaokr¹glanie do calosci nastepuje!
begin
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
exception 
when zero_divide then dbms_output.put_line('wzrost jest równy zero!');
end;
/

declare
x integer:=1;
begin
if x=1 then
    dbms_output.put_line('jeden!');
    dbms_output.put_line('jeden!');
    dbms_output.put_line('jeden!');
end if;
dbms_output.put_line('koniec');
end;
/


declare
x integer:=2;
begin
if x=1 then
    dbms_output.put_line('jeden!');    
else 
    dbms_output.put_line('nie jeden!');
end if;
dbms_output.put_line('koniec');
end;
/



declare
x integer:=1;
begin
if x=1 then
    dbms_output.put_line('jeden!');    
    dbms_output.put_line('jeden!');    
    dbms_output.put_line('jeden!');    
elsif x=2 then
    dbms_output.put_line('dwa!');
elsif x=3 then 
    dbms_output.put_line('trzy!');
else 
    dbms_output.put_line('albo mniej niz jeden, albo wiecej niz trzy');
end if;
dbms_output.put_line('koniec');
end;
/


declare --fuuuuuu
x integer:=2;
begin
if x=1 then
    dbms_output.put_line('jeden!');    
end if;    
if x=2 then
    dbms_output.put_line('dwa!');
end if;
if x=3 then 
    dbms_output.put_line('trzy!');
end if;
dbms_output.put_line('koniec');
end;
/

/*3.
*. Napisz blok anonimowy który przyjmie przez zmienn¹ wartoœæ liczbow¹ i wypisze czy wartoœæ ta jest mniejsza, równa czy wiêksza ni¿ 0.
*/

declare
x integer:=-10;
begin
if x>0 then 
    dbms_output.put_line('liczba dodatnia');
elsif x=0 then 
    dbms_output.put_line('zero!');
elsif x<0 then 
    dbms_output.put_line('liczba ujemna');
end if;    
end;
/
--if x>0{
--    
--}
/

declare
x integer:=-10;
begin
if x>0 then 
    dbms_output.put_line('liczba dodatnia');
elsif x=0 then 
    dbms_output.put_line('zero!');
else  
    dbms_output.put_line('liczba ujemna');
end if;    
end;
/

--przerwa do 12:00


/*
5. Napisz program który przyjmie od uzytkownika (przez zmienne) jego wzrost i masê, obliczy bmi i wyswietli stosowny opis wg. Wikipedii
*/

declare
wzrost number:=1.76;
masa number:=72;
bmi number;
begin
bmi:=round(masa/power(wzrost,2),2);
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
end;
/
--https://pl.wikipedia.org/wiki/Wska%C5%BAnik_masy_cia%C5%82a


declare
wzrost number:=1.76;
masa number:=72;
bmi number;
begin
bmi:=round(masa/power(wzrost,2),2);
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
if bmi<16 then
    dbms_output.put_line('wyglodzenie');
elsif bmi>=16 and bmi<17 then ---fuuuuuu
    dbms_output.put_line('wychudzenie');
end if;
end;
/



declare
wzrost number:=1.76;
masa number:=93;
bmi number;
begin
bmi:=round(masa/power(wzrost,2),2);
dbms_output.put_line('Twoje BMI='||bmi||' (grubasie!)');
if bmi<16 then
    dbms_output.put_line('wyglodzenie');
elsif bmi<17 then 
    dbms_output.put_line('wychudzenie');
elsif bmi<18.5 then 
    dbms_output.put_line('niedowaga');
elsif bmi<25 then 
    dbms_output.put_line('masa ok');
elsif bmi<30 then
    dbms_output.put_line('nadwaga');
elsif bmi<35 then
    dbms_output.put_line('I stopieñ przypakowania');
elsif bmi<40 then 
    dbms_output.put_line('II stopieñ przypakowania');
else 
    dbms_output.put_line('III stopieñ przypakowania');
end if;
end;
/


begin
    for x in 1..10 loop
    dbms_output.put_line('siema');
    end loop;
    dbms_output.put_line('koniec');
end;
/




begin
    for x in 1..10 loop
        dbms_output.put_line('siema po raz '||x);
    end loop;
    dbms_output.put_line('koniec');
end;
/

/*Zadanie 6.
*. Wyœwietl 20 kolejnych potêg liczby 2
*/

select power(10,3) from dual;
/

begin
for koza in 1..20 loop
    dbms_output.put_line('2^'||koza||'='||power(2,koza));
end loop;
end;
/


declare
wynik number;
begin
for koza in 1..20 loop
    wynik:=power(2,koza);
    dbms_output.put_line('2^'||koza||'='||wynik);
end loop;
end;

/


declare
wynik number;
x integer;
begin
for koza in 1..20  loop
    x:=koza*2;
    wynik:=power(2,x);
    dbms_output.put_line('2^'||x||'='||wynik);
end loop;
end;
/


declare
wynik number;
x integer;
begin
for koza in 20..1  loop --fuuuu
    x:=koza*2;
    wynik:=power(2,x);
    dbms_output.put_line('2^'||x||'='||wynik);
end loop;
end;
/


declare
wynik number;
begin
for koza in  reverse 1..20  loop --fuuuu
    wynik:=power(2,koza);
    dbms_output.put_line('2^'||koza||'='||wynik);
end loop;
end;
/


begin
for x in  -10..10 loop
    if x<0 then
        dbms_output.put_line(x||' jest mniejsze od 0');
    elsif x=0 then 
        dbms_output.put_line(x||' jest zerem');
    else 
        dbms_output.put_line(x||' jest wiêksze od 0');
    end if;
end loop;
end;

/*
7. Wypisz liczby w zakresie 1-100 obok kazdej piszac czy jest parzysta czy nie
*/

select mod(11,2) from dual;

